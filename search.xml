<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[新游戏开发日志001]]></title>
    <url>%2F2020%2F03%2F06%2FNewgame001%2F</url>
    <content type="text"><![CDATA[最近新游戏也开始进入开发阶段了，其实目前内容还没有特别完善的设计好，但是准备先做个demo级别的成品与团队测试一下，进行内容的填充和调整。也是在这里进行开发日志的同步，同时也作为教程类的文章进行分享。游戏部分采用gamemaker8.0，服务器部分采用c++。 本篇提要： 1.进入游戏阶段以及地图生成 2.服务器对应的部分代码 地图生成原理部分游戏地图为4个正方形区域，每个区域拥有88个方格，目前每个方格的实际像素大小为3232。每个方格会有随机资源或建筑（此时设计有7种基础资源和若干中立建筑），未被采集或破坏之前无法通过。因此本部分需要生成一个包含488*N的信息，在服务端进行生成，并在客户端解码，生成对应地图。 服务器部分首先是编码生成，这里采用最简单的字符串形式，a~z表明26种资源或建筑，生成一256char长度的字符串进行传输。 1234567891011121314string NewgameMap()&#123; string alb = "abcdefghijklmnopqrstuvwxyz"; string res; vector&lt;vector&lt;char&gt;&gt; C(16,vector&lt;char&gt;(16)); for (int i = 0; i &lt; 16; i++) for (int j = 0; j &lt; 16; j++) C[i][j] = alb[rand() % 7]; C[3][3] = 'z'; C[3][11] = 'z'; C[11][3] = 'z'; C[11][11] = 'z'; for (int i = 0; i &lt; 16; i++) for (int j = 0; j &lt; 16; j++) res += C[i][j]; return res;&#125; 其中，每个区域中心部分为z空地，用于放置玩家。接着是传输部分。 123456789101112131415161718192021222324252627else if (cid == 81)//NewGame置随机地图&#123; int oid = readint(actbf); string map = readtostring(actbf); Room* tmproom = playerid[i]-&gt;room; if (tmproom-&gt;newmap == "") &#123; int t,tmp[4]; for (int j = 0; j &lt; 4; j++) tmp[j] = j + 1; for (int j = 0; j &lt; tmproom-&gt;member.size(); j++) &#123; t = rand() % (4 - j); tmproom-&gt;member[j]-&gt;newgameposition = tmp[t]; swap(tmp[t], tmp[4 - j]); &#125; tmproom-&gt;newmap = NewgameMap(); &#125; oid = playerid[i]-&gt;newgameposition; map = tmproom-&gt;newmap; for (int j = 0; j &lt; tmproom-&gt;member.size(); j++) &#123; clearbuffer(actbf); writebyte(81, actbf); writeint(oid, actbf); writestring(&amp;map[0], actbf); sendmessage(playerid[i]-&gt;playerid, "", 0, actbf); &#125;&#125; 采用81在服务器和客户端作为地图信息交换的标识。当房间的地图还未被生成，即 1if (tmproom-&gt;newmap == ""); 使用NewgameMap()进行编码生成，并生成所有玩家的标号。标号采用洗牌算法，并将这两个信息传输给所有房间玩家。 洗牌算法 1.返回现有空间随机某一位置 2.将随机位置与空间末尾交换 3.将末尾位置移出现有空间 客户端部分]]></content>
      <categories>
        <category>新游戏开发日志</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Test]]></title>
    <url>%2F2019%2F07%2F19%2FTest%2F</url>
    <content type="text"><![CDATA[This is a test text. Text1Text1-112345#include&lt;math.h&gt;int main()&#123; return 0;&#125; Baidu: Baidu Text1-2 this is a test.Hello! Text212345678910class hello&#123;private: double apple;public: void hello(double a) &#123; apple = a; &#125;&#125; This is a test, too.]]></content>
      <categories>
        <category>测试用</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F18%2F%23old%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment hahahahhahahahha]]></content>
  </entry>
</search>
